---
import { Icon } from "astro-icon/components";
import Container from "./container.astro";
import Sectionhead from "./sectionhead.astro";
import { ArrowIcon } from "./ui/icons";

---

<Container>
  <Sectionhead>
    <Fragment slot="title">FAQ</Fragment>
    <Fragment slot="desc">Frequenty asked questions</Fragment>
  </Sectionhead>

  <div class="grid divide-y divide-neutral-200 max-w-xl mx-auto mt-8">
    {
      [
        {
          question: "What kind of organization or teams would 1fe best solve for?",
          answer: (
            <>
              <p class="text-neutral-600">Large-scale organizations with <b>multiple product teams</b> building <b>frontend web experiences</b> under the same brand or umbrella.</p>
              <br />
              <p class="text-neutral-600">Organizations with <b>distributed teams</b> across various domains who:</p>
              <br />
              <ul>
              <li class="flex items-center gap-3 text-neutral-600">
                <Icon name="ph:circle-fill" class="w-2 h-2" />
                <span class="text-sm">Maintain separate frontend stacks, tools, and workflows.</span>
              </li>
              <br />
              <li class="flex items-center gap-3 text-neutral-600">
                <Icon name="ph:circle-fill" class="w-2 h-2" />
                <span class="text-sm">Have <b>low levels of reuse</b> and <b>redundant efforts</b> in utilities, deployment, and architecture.</span>
              </li>
              <br/>
              <li class="flex items-center gap-3 text-neutral-600">
                <Icon name="ph:circle-fill" class="w-2 h-2" />
                <span class="text-sm">Need to deliver <b>consistent, performant</b> user experiences across multiple surfaces.</span>
              </li>
              </ul>
            </>
          ),
        },
        {
          question: "What type of org structure would best be fit for 1fe",
          answer: (
            <>
              <p>A "Platform + Product model" would be ideal, where the platform team supports product teams by abstracting away infrastructure complexity.</p>
              <br />
              <p class="text-neutral-600"><b>A central "Platform Team" that:</b></p>
              <br />
              <ul>
                <li class="flex items-center gap-3 text-neutral-600">
                  <Icon name="ph:circle-fill" class="w-2 h-2" />
                  <span class="text-sm">Owns shared infrastructure: common utilities, app shell, pipeline templates, tooling, etc.</span>
                </li>
                <br />
                <li class="flex items-center gap-3 text-neutral-600">
                  <Icon name="ph:circle-fill" class="w-2 h-2" />
                  <span class="text-sm">Drives best practices and central migrations/upgrades.</span>
                </li>
                <br />
                <li class="flex items-center gap-3 text-neutral-600">
                  <Icon name="ph:circle-fill" class="w-2 h-2" />
                  <span class="text-sm">Enforces policies around code quality, performance, and security.</span>
                </li>
              </ul>
              <br />
              <p class="text-neutral-600"><b>Independent “Application Teams” that</b></p>
              <br />
              <ul>
                <li class="flex items-center gap-3 text-neutral-600">
                  <Icon name="ph:circle-fill" class="w-2 h-2" />
                  <span class="text-sm">Plug into the shared 1fe ecosystem.</span>
                </li>
                <br />
                <li class="flex items-center gap-3 text-neutral-600">
                  <Icon name="ph:circle-fill" class="w-2 h-2" />
                  <span class="text-sm">Focus on business logic and product-specific UI.</span>
                </li>
                <br />
                <li class="flex items-center gap-3 text-neutral-600">
                  <Icon name="ph:circle-fill" class="w-2 h-2" />
                  <span class="text-sm">Deploy independently using centrally defined CI/CD templates.</span>
                </li>
              </ul>
            </>
          ),
        }
      ].map((item) => (
        <div class="py-5">
          <details class="group">
            <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
              <span>{item.question}</span>
              <span class="transition group-open:rotate-180">
                <ArrowIcon />
              </span>
            </summary>
            <div class="text-neutral-600 mt-3 opacity-0 -translate-y-3 group-open:translate-y-0 group-open:opacity-100 group-open:transition-all">
              {item.answer}
            </div>
          </details>
        </div>
      ))
    }
  </div>
</Container>